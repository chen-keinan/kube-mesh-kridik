---
benchmark_type: mesh
categories:
  -
    name: istio Security Checks
    sub_category:
      name: Istio Safer Authorization Policy Patterns
      security_checks:
        -
          name: 'Use ALLOW-with-positive-matching or DENY-with-negative-match patterns'
          description: 'The ALLOW-with-positive-matching pattern is to use the ALLOW action only with positive matching fields (e.g. paths, values)
                       and do not use any of the negative matching fields (e.g. notPaths, notValues).
                       The DENY-with-negative-matching pattern is to use the DENY action only with negative matching
                       fields (e.g. notPaths, notValues) and do not use any of the positive matching fields (e.g. paths, values).'
          check_command:
            - kubectl get namespaces -o=custom-columns=NAME:.metadata.name | awk '{if(NR>1)print}'
            - 'kubectl get AuthorizationPolicy -n ${0} -o json 2> /dev/null |  jq ''. |= . + {"namespace": "${0}"}'''
          remediation: 'We recommend you define your Istio authorization policies following the default-deny pattern to enhance your clusterâ€™s security
                        posture. The default-deny authorization pattern means your system denies all requests by default, and you define the conditions
                        in which the requests are allowed. In case you miss some conditions, traffic will be unexpectedly denied, instead of traffic
                        being unexpectedly allowed. The latter typically being a security incident while the former may result in a poor user experience,
                        a service outage or will not match your SLO/SLA.'
          check_type: multi_param
          impact: 'namespace will exposed to non restricted api calls to namespace'
          eval_expr: "'${0}' != 'No resources found in default namespace.'; && [${1} MATCH safer_authorization_policy_pattern.policy QUERY istio.policy_eval RETURN match,namespace];"
          default_value: 'By default, Istio is not configure for ALLOW and DENY pattern'
          eval_message: 'Use ALLOW-with-positive-matching or DENY-with-negative-match patterns on namespace: $namespace'
          references:
            - https://istio.io/latest/docs/ops/best-practices/security/#use-allow-with-positive-matching-and-deny-with-negative-match-patterns
        -
          name: 'path normalization in authorization policy'
          description: 'The enforcement point for authorization policies is the Envoy proxy instead of the usual resource access point in the backend application.
                        A policy mismatch happens when the Envoy proxy and the backend application interpret the request differently.'
          check_command:
            - kubectl get IstioOperator -n istio-system -o=custom-columns=NAME:.metadata.name | awk '{if(NR>1)print}'
            - 'kubectl get IstioOperator ${0} -n istio-system -o json 2> /dev/null'
          remediation: 'it is recommended to use path normalization from type DECODE_AND_MERGE_SLASHES'
          check_type: multi_param
          impact: 'A mismatch can lead to either unexpected rejection or a policy bypass'
          eval_expr: "'${0}' != 'No resources found in default namespace.'; && [${1} MATCH path_normalization_in_authorization.policy QUERY istio.policy_eval RETURN match,operator];"
          default_value: 'advance path normalization is not define'
          eval_message: 'path normalization from type DECODE_AND_MERGE_SLASHES is defined on operator $operator at istio-system namespace'
          references:
            - https://istio.io/latest/docs/ops/best-practices/security/#use-allow-with-positive-matching-and-deny-with-negative-match-patterns
