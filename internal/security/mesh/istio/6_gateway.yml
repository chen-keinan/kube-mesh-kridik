---
benchmark_type: mesh
categories:
  -
    name: istio Security Checks
    sub_category:
      name: Gateways
      security_checks:
         -
          name: '6.0 Restrict Gateway creation privileges'
          description: 'restrict creation of Gateway resources to trusted cluster administrators. This can be achieved by Kubernetes RBAC policies or tools like Open Policy Agent.'
          check_command:
             - 'kubectl get ClusterRole -o=custom-columns="NAME:.metadata.name" | awk ''{if(NR>1)print}'''
             - 'kubectl get ClusterRole ${0} -o json 2> /dev/null'
          remediation: 'restrict creation of Gateway resources via Kubernetes RBAC policies or tools like Open Policy Agent.'
          check_type: multi_param
          impact: may cause  creation of gateway by untrusted users
          eval_expr: "'${0}' != 'No resources found in default namespace.'; && [${1} MATCH restrict_gateway_creation_privileges.policy QUERY istio.policy_eval RETURN match,role];"
          eval_message: 'role $role is restricted from changing (create / delete /update) Gateway'
          references:
            - https://istio.io/latest/docs/ops/best-practices/security/#gateways
            - https://kubernetes.io/docs/reference/access-authn-authz/rbac/#auto-reconciliation
            - https://www.openpolicyagent.org/
         -
          name: '6.1 Avoid overly broad hosts configurations'
          description: 'When possible, avoid overly broad hosts settings in Gateway. may cause potential exposure of unexpected domains'
          check_command:
            - 'kubectl get gateways --all-namespaces -o=custom-columns="NAME:.metadata.name,NAMESPACE:.metadata.namespace" | awk ''{if(NR>1)print}'' |awk '' { print  $1 " -n " $NF } '''
            - 'kubectl get gateway ${0} -o json 2> /dev/null'
          remediation: 'gateway hosts setting should be locked down to allow only specific domains or specific namespaces'
          check_type: multi_param
          impact: may cause potential exposure of unexpected domains
          eval_expr: "'${0}' != 'No resources found in default namespace.'; && [${1} MATCH avoid_overly_broad_hosts_configurations.policy QUERY istio.policy_eval RETURN match,namespace,gateway];"
          eval_message: 'gateway $gateway on namespace $namespace is overlaying broad hosts configurations'
          references:
            - https://istio.io/latest/docs/ops/best-practices/security/#gateways
         -
          name: '6.2 Isolate sensitive services'
          description: 'It may be desired to enforce stricter physical isolation for sensitive services. For example,
                        you may want to run a dedicated gateway instance for a sensitive payments.example.com, while utilizing
                         a single shared gateway instance for less sensitive domains like blog.example.com and store.example.com.'
          check_command:
            - 'require manual check'
          remediation: 'disable ports if needed'
          check_type: multi_param
          impact: This can offer a stronger defense-in-depth and help meet certain regulatory compliance guidelines.
          eval_expr: "no eval expr"
          default_value: 'service are not isolated by diffrent gateways'
          type: manual
          eval_message: 'enforce stricter physical isolation for sensitive services'
          references:
            - https://istio.io/latest/docs/ops/best-practices/security/#isolate-sensitive-services
